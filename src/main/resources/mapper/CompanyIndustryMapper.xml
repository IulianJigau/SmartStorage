<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.test.smartstorage.mapper.importable.CompanyIndustryMapper">

    <select id="checkIndexingProcessExistence" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM pg_locks
            INNER JOIN pg_class
            ON pg_locks.relation = pg_class.oid
            WHERE pg_class.relname = 'company_industry'
            AND pg_locks.mode = 'ShareLock'
        )
    </select>

    <delete id="removeDuplicates">
        DELETE
        FROM company_industry
            USING (SELECT MIN(process_id) as keep_process_id, corporate_number, update_date
                   FROM company_industry
                   GROUP BY corporate_number, update_date) reference
        WHERE company_industry.corporate_number = reference.corporate_number
          AND company_industry.update_date = reference.update_date
          AND company_industry.process_id != reference.keep_process_id
    </delete>

    <delete id="dropIndex">
        DROP INDEX IF EXISTS company_industry_index;
    </delete>

    <insert id="createIndex">
        CREATE INDEX IF NOT EXISTS company_industry_index ON company_industry (corporate_number, update_date);
    </insert>

    <select id="getPage" resultMap="companyIndustryFlatResultMap">
        SELECT *
        FROM company_industry
        ORDER BY process_id DESC
        LIMIT #{size} OFFSET #{size} * (#{page} - 1)
    </select>

    <select id="getTotalEntries">
        SELECT COUNT(*)
        FROM company_industry
    </select>

    <delete id="deleteAll">
        TRUNCATE company_industry;
    </delete>

    <resultMap id="companyIndustryFlatResultMap" type="CompanyIndustryFlat">
        <id property="processId" column="process_id" />
        <id property="corporateNumber" column="corporate_number" />
        <id property="businessItemId" column="business_item_id" />
    </resultMap>
</mapper>